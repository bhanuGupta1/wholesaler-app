import{f as k,d as i,e as p,M as I,c as y,s as A,Q as D,q as P,k as q,g as v}from"./index-C076F-ZT.js";const f="orders",w="products",$=async a=>{try{const o=k(i),{items:e,...r}=a;E(e);const c=e.reduce((t,s)=>{const n=s.effectivePrice??s.price??0;return t+n*(s.quantity??0)},0),d=r.taxAmount??r.gst??c*.15,l=r.totalAmount??r.total??c+d;for(const t of e){const s=p(i,w,t.productId),n=await I(s);if(!n.exists())throw new Error(`Product ${t.productName} not found`);const u=n.data();if(u.stock<t.quantity)throw new Error(`Insufficient stock for ${t.productName}. Available: ${u.stock}, Requested: ${t.quantity}`)}const h=p(y(i,f)),m=A();o.set(h,{...r,subtotal:r.subtotal??c,taxAmount:r.taxAmount??r.gst??d,totalAmount:r.totalAmount??r.total??l,total:r.total??r.totalAmount??l,createdAt:m,dateCreated:m,updatedAt:m,status:r.status||"pending",paymentStatus:r.paymentStatus||"pending"});for(const t of e){const s=p(i,w,t.productId);o.update(s,{stock:D(-t.quantity),updatedAt:m})}for(const t of e){const s=p(y(i,f,h.id,"orderItems")),n=t.effectivePrice??t.price??0,u=t.price??0,g=t.quantity??0;o.set(s,{productId:t.productId||"",productName:t.productName||"",price:u,effectivePrice:n,quantity:g,subtotal:n*g,hasBulkDiscount:t.hasBulkDiscount??!1,...t.hasBulkDiscount&&{originalPrice:u,bulkSavings:(u-n)*g,bulkPricingInfo:t.bulkPricing||null},sku:t.sku||"",category:t.category||"",imageUrl:t.imageUrl||""})}return await o.commit(),h.id}catch(o){throw console.error("Error creating order with stock update:",o),o}},E=a=>{const o=[];if(!a||a.length===0)throw new Error("Order must contain at least one item");if(a.forEach((e,r)=>{e.productId||o.push(`Item ${r+1}: Missing product ID`),e.productName||o.push(`Item ${r+1}: Missing product name`);const c=e.effectivePrice??e.price;(c==null||c<0)&&o.push(`Item ${r+1} (${e.productName}): Invalid price`),(!e.quantity||e.quantity<=0)&&o.push(`Item ${r+1} (${e.productName}): Invalid quantity`)}),o.length>0)throw new Error(`Order validation failed:
${o.join(`
`)}`);return!0},b=async a=>{try{const o=await I(p(i,f,a));if(!o.exists())throw new Error(`Order with ID ${a} not found`);const e=o.data(),r=P(y(i,f,a,"orderItems"),q("productName","asc")),c=await v(r),d=[];return c.forEach(l=>{d.push({id:l.id,...l.data()})}),{id:o.id,...e,items:d,totalAmount:e.totalAmount||e.total||0,total:e.total||e.totalAmount||0}}catch(o){throw console.error("Error getting order with items:",o),o}};export{$ as c,b as g,E as v};
